NOTEBOOK
1.动态规划和贪心算法
  解决最优化问题的算法
  I.确定最优子结构
    每一个可以使用这两种算法中的一个最优化问题都有一个最优子结构———即一个问题的最优解包含其子问题的最优解。
    我们需要做的就是要递归地定义该问题的解。
    递归的求解其更小的子问题。为了缩小其时间复杂度，设置备忘机制、自底向上的搜索。当遇到相同的子问题时避免重复搜索。
    无论使用哪一种算法，都是利用了最优子结构的性质。只不过两种算法做出的选择和考虑的维度不同。
  II.贪心选择
    我们需要知道，并不是每一个最优解问题都满足贪心选择的性质。0-1背包问题和分数背包问题。我们是通过做出局部最优解的选择来构造全局最优解。
    这种选择和动态规划中的每次都是先求解子问题不同，贪心选择每次做出选择之后并不求解任何一个子问题，他是自顶向下的，一次一次地使问题规模变小而不是利用更小的子问题的解。
    贪心选择是安全的：做出贪心选择原问题最优解总是存在。
    做出贪心选择之后，子问题满足性质：其最优解与贪心选择组合即可得到原问题的最优解。
    贪心算法通常适用于一些可以分割、可以取舍的问题，而不适用于需要满足特定约束条件的问题。
2.摊还分析
